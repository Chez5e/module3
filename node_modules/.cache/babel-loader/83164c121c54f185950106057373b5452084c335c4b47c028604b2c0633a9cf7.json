{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\warfa\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\m1\\\\bookworm\\\\bookworm-frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register({\n  onRegister\n}) {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:3002/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Ошибка регистрации');\n      onRegister(data.user); // Передаём пользователя в App.js\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n      value: login,\n      onChange: e => setLogin(e.target.value),\n      required: true,\n      style: {\n        display: 'block',\n        marginBottom: 10,\n        padding: 8,\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      style: {\n        display: 'block',\n        marginBottom: 10,\n        padding: 8,\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Загрузка...' : 'Зарегистрироваться'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"ZruIUwP/kF/RMXokLbmeNLn/kqo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","onRegister","_s","login","setLogin","password","setPassword","error","setError","loading","setLoading","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","user","onSubmit","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","placeholder","value","onChange","target","required","display","marginBottom","width","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/warfa/OneDrive/Рабочий стол/m1/bookworm/bookworm-frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Register({ onRegister }) {\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:3002/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ login, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || 'Ошибка регистрации');\r\n      \r\n      onRegister(data.user); // Передаём пользователя в App.js\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ padding: 20 }}>\r\n      <h2>Регистрация</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <input\r\n        placeholder=\"Логин\"\r\n        value={login}\r\n        onChange={(e) => setLogin(e.target.value)}\r\n        required\r\n        style={{ display: 'block', marginBottom: 10, padding: 8, width: 200 }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Пароль\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n        style={{ display: 'block', marginBottom: 10, padding: 8, width: 200 }}\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Загрузка...' : 'Зарегистрироваться'}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}